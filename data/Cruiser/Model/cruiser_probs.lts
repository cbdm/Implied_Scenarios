//------------------------- Cruiser System -------------------------

//--------------------- PROBABILISTIC MODEL ------------------------

//------------------------------------------------------------------
//----------------------- Components' States -----------------------
//------------------------------------------------------------------

InputSpeed = Q0,
  Q0  = ( (0.8) engineOn -> Q1
      | (0.2) end -> Q2),
  Q1  = ( (0.25) engineOff -> Q3
      | (0.75) speed -> Q4),
  Q2  = ( (1.0) endAction -> Q5),
  Q3  = ( (0.8) engineOn -> Q1
      | (0.2) end -> Q2),
  Q4  = ( (0.6666666666666666) engineOff -> Q6
      | (0.3333333333333333) speed -> Q7),
  Q5  = STOP,
  Q6  = ( (0.2) end -> Q2
      | (0.7999999999999999) engineOn -> Q8),
  Q7  = ( (1.0) speed -> Q9),
  Q8  = ( (0.25000000000000006) engineOff -> Q3
      | (0.7500000000000002) speed -> Q4),
  Q9  = ( (1.0) engineOff -> Q10),
  Q10 = ( (1.0) engineOn -> Q11),
  Q11 = ( (1.0) speed -> Q12),
  Q12 = ( (1.0) engineOff -> Q13),
  Q13 = ( (0.8) engineOn -> Q1
      | (0.2) end -> Q2).

SensorScan = Q0,
  Q0  = ( (0.25) endAction -> Q1
      | (0.75) on -> Q2),
  Q1  = STOP,
  Q2  = ( (0.3333333333333333) accelerator -> Q3
      | (0.3333333333333333) brake -> Q4
      | (0.3333333333333333) off -> Q5),
  Q3  = ( (0.25) endAction -> Q1
      | (0.75) on -> Q2),
  Q4  = ( (0.25) endAction -> Q1
      | (0.75) on -> Q2),
  Q5  = ( (1.0) on -> Q6),
  Q6  = ( (1.0) on -> Q7),
  Q7  = ( (1.0) off -> Q8),
  Q8  = ( (0.25) endAction -> Q1
      | (0.75) on -> Q2).

CruisController = Q0,
  Q0  = ( (0.2) end -> Q1
      | (0.8) engineOn -> Q2),
  Q1  = ( (1.0) endAction -> Q3),
  Q2  = ( (1.0) clearSpeed -> Q4),
  Q3  = STOP,
  Q4  = ( (0.75) on -> Q5
      | (0.25) engineOff -> Q6),
  Q5  = ( (1.0) recordSpeed -> Q7),
  Q6  = ( (0.2) end -> Q1
      | (0.8) engineOn -> Q2),
  Q7  = ( (1.0) enableControl -> Q8),
  Q8  = ( (0.3333333333333333) off -> Q9
      | (0.3333333333333333) accelerator -> Q10
      | (0.3333333333333333) brake -> Q11),
  Q9  = ( (1.0) disableControl -> Q12),
  Q10 = ( (1.0) disableControl -> Q13),
  Q11 = ( (1.0) disableControl -> Q14),
  Q12 = ( (1.0) engineOff -> Q15),
  Q13 = ( (1.0) engineOff -> Q16),
  Q14 = ( (1.0) engineOff -> Q17),
  Q15 = ( (1.0) engineOn -> Q18),
  Q16 = ( (0.2) end -> Q1
      | (0.8) engineOn -> Q2),
  Q17 = ( (0.2) end -> Q1
      | (0.8) engineOn -> Q2),
  Q18 = ( (1.0) clearSpeed -> Q19),
  Q19 = ( (1.0) on -> Q20),
  Q20 = ( (1.0) recordSpeed -> Q21),
  Q21 = ( (1.0) enableControl -> Q22),
  Q22 = ( (1.0) on -> Q23),
  Q23 = ( (1.0) recordSpeed -> Q24),
  Q24 = ( (1.0) enableControl -> Q25),
  Q25 = ( (1.0) off -> Q26),
  Q26 = ( (1.0) disableControl -> Q27),
  Q27 = ( (1.0) engineOff -> Q28),
  Q28 = ( (0.2) end -> Q1
      | (0.8) engineOn -> Q2).

SpeedController = Q0,
  Q0  = ( (0.2) endAction -> Q1
      | (0.6000000000000001) clearSpeed -> Q2
      | (0.2) speed -> Q3),
  Q1  = STOP,
  Q2  = ( (1.0) recordSpeed -> Q4),
  Q3  = ( (1.0) clearSpeed -> Q5),
  Q4  = ( (0.6666666666666666) enableControl -> Q6
      | (0.3333333333333333) speed -> Q7),
  Q5  = ( (0.2) endAction -> Q1
      | (0.6000000000000001) clearSpeed -> Q2
      | (0.2) speed -> Q3),
  Q6  = ( (0.5) disableControl -> Q8
      | (0.5) speed -> Q9),
  Q7  = ( (1.0) enableControl -> Q10),
  Q8  = ( (0.2) endAction -> Q1
      | (0.6000000000000001) clearSpeed -> Q2
      | (0.2) speed -> Q3),
  Q9  = ( (1.0) setThrottle -> Q11),
  Q10 = ( (1.0) speed -> Q12),
  Q11 = ( (1.0) disableControl -> Q13),
  Q12 = ( (1.0) setThrottle -> Q14),
  Q13 = ( (0.2) endAction -> Q1
      | (0.6000000000000001) clearSpeed -> Q2
      | (0.2) speed -> Q3),
  Q14 = ( (1.0) speed -> Q15),
  Q15 = ( (1.0) setThrottle -> Q16),
  Q16 = ( (1.0) disableControl -> Q17),
  Q17 = ( (1.0) speed -> Q18),
  Q18 = ( (1.0) clearSpeed -> Q19),
  Q19 = ( (1.0) recordSpeed -> Q20),
  Q20 = ( (1.0) enableControl -> Q21),
  Q21 = ( (1.0) recordSpeed -> Q22),
  Q22 = ( (1.0) enableControl -> Q23),
  Q23 = ( (1.0) disableControl -> Q24),
  Q24 = ( (0.2) endAction -> Q1
      | (0.6000000000000001) clearSpeed -> Q2
      | (0.2) speed -> Q3).

Throttle = Q0,
  Q0  = ( (0.6666666666666666) setThrottle -> Q0
      | (0.3333333333333333) endAction -> Q1),
  Q1 = STOP.

//------------------------------------------------------------------
//----------------------------- Constraints ------------------------
//------------------------------------------------------------------

  // Constraint that treats occurences of 'off' and 'brake' in unwanted places
  NegScen1 = ({accelerator, clearSpeed, disableControl, engineOff, engineOn, on, recordSpeed, setThrottle} -> NegScen1 | enableControl -> AuxEnable | speed -> AuxSpeed1), // Allows everything (but 'brake' and 'off') until a 'speed' or 'enableControl' is reached
  AuxEnable = ({brake, off, on} -> NegScen1 | speed -> setThrottle -> NegScen1), // Força o brake após o enableControl e limita as possibilidades para o off
  AuxSpeed1 = ({clearSpeed, setThrottle} -> NegScen1 | enableControl -> speed -> AuxSpeed2), // Deixa livre todas as alternativas do speed e passa para outro estago pra tratar o off
  AuxSpeed2 = (off -> NegScen1 | setThrottle -> off -> NegScen1). // Limita as possibilidades para o off


  // Constrains the options after 'enableControl'
  NegScen2 = ({accelerator, brake, clearSpeed, engineOff, engineOn, off, on, recordSpeed, setThrottle, speed} -> NegScen2 | enableControl -> AuxEnable | disableControl -> AuxDisable),
  AuxEnable = (brake -> disableControl -> engineOff -> NegScen2 | on -> recordSpeed -> enableControl -> off -> NegScen2 | speed -> NegScen2),
  AuxDisable = (engineOff -> NegScen2).

  // Constrains what can happen after 'engineOn'
  NegScen3 = ({accelerator, brake, clearSpeed, disableControl, enableControl, engineOff, off, on, recordSpeed, speed} -> NegScen3 | engineOn -> Aux1 | setThrottle -> Aux2),
  Aux1 = (clearSpeed -> on -> NegScen3 | speed -> clearSpeed -> engineOff -> NegScen3), // Limits the options for a regular system start
  Aux2 = ({accelerator, off, speed} -> NegScen3 | disableControl -> Aux3), // Trying to match engine restart in Scenario #1
  Aux3 = (engineOff -> engineOn -> speed -> clearSpeed -> on -> NegScen3). // Limits to the only option for a in-scenario restart (Scenario #1)

//------------------------------------------------------------------
//----------------------------- Compositions -----------------------
//------------------------------------------------------------------

 ||ArchitectureModel = (InputSpeed || SensorScan || CruisController || SpeedController || Throttle).

 ||ConstrainedModel_1 = (ArchitectureModel || NegScen1).
 ||ConstrainedModel_2 = (ArchitectureModel || NegScen2).
 ||ConstrainedModel_3 = (ArchitectureModel || NegScen3).

 ||ConstrainedModel = (ArchitectureModel || NegScen1 || NegScen2 || NegScen3).


//------------------------------------------------------------------
//----------------------------- Notes ------------------------------
//------------------------------------------------------------------

//// All messages in alphabetical order:
//// {accelerator, brake, clearSpeed, disableControl, enableControl, engineOff, engineOn, off, on, recordSpeed, setThrottle, speed}

//// Composing NegScens 1, 2, and 3 removes 14 Common Behaviors: {1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17}

//// Removes Common Behaviors {6, 8, 10, 11, 12, 15, 17} (which were already removed)
    ////
    //// NegScen4 = ({accelerator, brake, clearSpeed, disableControl, engineOff, engineOn, on, recordSpeed} -> NegScen4 | enableControl -> AuxEnable | setThrottle -> AuxSet | speed -> AuxSpeed),
    //// AuxEnable = ({brake, off, on} -> NegScen4 | speed -> AuxSpeed),
    //// AuxSet = ({accelerator, disableControl, off} -> NegScen4 | speed -> AuxSpeed),
    //// AuxSpeed = ({clearSpeed, enableControl, off} -> NegScen4 | setThrottle -> AuxSet).


//// Removes Common Behaviors {4, 5, 6, 8, 10, 11, 12, 15, 17} (keeps both 1.1 and 1.2)
	////
	//// NegScen4 = ({accelerator, brake, clearSpeed, disableControl, engineOff, engineOn, on, recordSpeed} -> NegScen4 | enableControl -> AuxEnable | setThrottle -> AuxSet | speed -> AuxSpeed),
	//// AuxEnable = ({brake, off, on} -> NegScen4 | speed -> AuxSpeed),
	//// AuxSet = ({accelerator, disableControl, off} -> NegScen4 | speed -> AuxSpeed),
	//// AuxSpeed = ({clearSpeed, off} -> NegScen4 | setThrottle -> AuxSet | enableControl -> speed -> AuxSpeed).

//// Removes Common Behaviors {3, 5, 7, 8, 11, 17} (keeps only 1.2)
	//// NegScen1 = (setThrottle -> Aux | {brake, clearSpeed, disableControl, enableControl, engineOff, engineOn, off, on, recordSpeed, speed} -> NegScen1),
	//// Aux = ({accelerator, disableControl, off, speed} -> NegScen1).


//// Alternative to the above NegScen1: Removes Common Behaviors {3, 5, 7, 8, 11, 17} (keeps only 1.2)
    ////
    //// AlternateNegScen1 = (setThrottle -> Aux),
    //// Aux = ({accelerator, off} -> AlternateNegScen1).


//// Old NegScen2
//// Removes Common Behaviors {5, 6, 8, 10, 12, 15} (keeps both 1.1 and 1.2)
    //// NegScen2 = (enableControl -> Aux | {accelerator, clearSpeed, disableControl, engineOff, engineOn, off, on, recordSpeed, setThrottle, speed} -> NegScen2),
    //// Aux = ({brake, off, on, speed} -> NegScen2).